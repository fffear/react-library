{"version":3,"sources":["Header/Modal/ModalContent.module.css","Input/Input.module.css","Library/Library.module.css","App.module.css","Header/Header.module.css","Library/Books/Book/Book.module.css","Input/Input.js","Header/Modal/ModalContent.js","Header/Modal/Modal.js","Header/Header.js","Library/Books/Book/Book.js","Library/Books/Books.js","Library/Library.js","LocalStorage/LocalStorage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","input","props","inputElement","inputtype","className","classes","InputEle","id","type","name","placeholder","min","required","options","map","option","key","value","Input","Label","htmlFor","label","ModalContent","ReactDOM","createPortal","ModalCover","onClick","event","target","closeModal","ModalArea","ModalClose","ModalBody","form","onSubmit","addNewBook","SubmitBtn","document","body","Modal","showModal","setState","isShown","state","this","buttonText","Component","header","Header","Book","title","author","pages","read","changeReadStatusHandler","RemoveBtn","removeBookHandler","Books","books","book","index","Library","ChangeReadStatus","Remove","LocalStorage","storageAvailable","storage","window","x","setItem","removeItem","e","DOMException","code","length","App","addNewBookHandler","preventDefault","nextBookId","push","valueAsNumber","localStorage","JSON","stringify","booksId","bookIndex","findIndex","b","Object","assign","slice","splice","getItem","parse","bind","Boolean","location","hostname","match","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37a1879a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalCover\":\"ModalContent_ModalCover__1f_Gg\",\"ModalArea\":\"ModalContent_ModalArea__2PQM2\",\"SubmitBtn\":\"ModalContent_SubmitBtn__15s0v\",\"ModalClose\":\"ModalContent_ModalClose__ywYUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Input_Label__2HyhL\",\"Input\":\"Input_Input__1Mi_0\",\"InputEle\":\"Input_InputEle__1hhjz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Library\":\"Library_Library__3JFmO\",\"read\":\"Library_read__1-Kk-\",\"ChangeReadStatus\":\"Library_ChangeReadStatus__29dUB\",\"Remove\":\"Library_Remove__2PPqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3Ipkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RemoveBtn\":\"Book_RemoveBtn__3b_fq\"};","import React from \"react\";\nimport classes from \"./Input.module.css\";\n\nconst input = props => {\n  let inputElement = null;\n\n  switch (props.inputtype) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={classes.InputEle}\n          id={props.id}\n          type={props.type}\n          name={props.name}\n          placeholder={props.placeholder}\n          min={props.min}\n          required\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          className={classes.InputEle}\n          id={props.id}\n          type={props.type}\n          name={props.name}\n          required\n        >\n          {props.options.map(option => {\n            return (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            );\n          })}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={classes.InputEle}\n          id={props.id}\n          type={props.type}\n          name={props.name}\n          placeholder={props.placeholder}\n          required\n        />\n      );\n  }\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label} htmlFor={props.id}>\n        {props.label}\n      </label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default input;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Input from \"../../Input/Input\";\nimport classes from \"./ModalContent.module.css\";\n\nconst ModalContent = props => {\n  return ReactDOM.createPortal(\n    <aside\n      className={classes.ModalCover}\n      onClick={event => {\n        if (event.target.className === classes.ModalCover) {\n          props.closeModal();\n        }\n      }}\n    >\n      <div className={classes.ModalArea}>\n        <div className={classes.ModalClose} onClick={props.closeModal}>\n          X\n        </div>\n\n        <div className={classes.ModalBody}>\n          <form\n            className={classes.form}\n            onSubmit={event => {\n              props.addNewBook(event);\n              props.closeModal();\n            }}\n          >\n            <Input\n              inputtype=\"input\"\n              id=\"title\"\n              label=\"Title\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Title\"\n              required\n            />\n\n            <Input\n              inputtype=\"input\"\n              id=\"author\"\n              label=\"Author\"\n              type=\"text\"\n              name=\"author\"\n              placeholder=\"Author\"\n              required\n            />\n\n            <Input\n              inputtype=\"input\"\n              id=\"no-of-pages\"\n              label=\"No of pages\"\n              type=\"number\"\n              name=\"no-of-pages\"\n              placeholder=\"No of pages\"\n              required\n              min=\"1\"\n            />\n\n            <Input\n              inputtype=\"select\"\n              id=\"read-status\"\n              label=\"Read Status\"\n              name=\"read-status\"\n              options={[\"Read\", \"Not Read Yet\"]}\n            />\n\n            {/* <label htmlFor=\"read-status\">Read Status</label>\n            <select id=\"read-status\" name=\"read-status\" required>\n              <option value=\"Read\">Read</option>\n              <option value=\"Not Read Yet\">Not Read Yet</option>\n            </select> */}\n\n            <button className={classes.SubmitBtn} type=\"submit\">\n              Add Book\n            </button>\n          </form>\n        </div>\n      </div>\n    </aside>,\n    document.body\n  );\n};\n\nexport default ModalContent;\n","import React, { Fragment, Component } from \"react\";\nimport ModalContent from \"./ModalContent\";\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShown: false\n    };\n  }\n\n  showModal = () => {\n    this.setState({ isShown: true });\n  };\n\n  closeModal = () => {\n    this.setState({ isShown: false });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <button onClick={this.showModal}>{this.props.buttonText}</button>\n\n        {this.state.isShown ? (\n          <ModalContent\n            closeModal={this.closeModal}\n            addNewBook={this.props.addNewBook}\n          />\n        ) : (\n          <Fragment />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport Modal from \"./Modal/Modal\";\nimport classes from \"./Header.module.css\";\n\nconst header = props => {\n  return (\n    <header className={classes.Header}>\n      <h1>My Library</h1>\n      <Modal buttonText=\"Add New Book\" addNewBook={props.addNewBook} />\n    </header>\n  );\n};\n\nexport default header;\n","import React from \"react\";\nimport classes from \"./Book.module.css\";\n\nconst Book = props => {\n  return (\n    <tr>\n      <td>{props.title}</td>\n      <td>{props.author}</td>\n      <td>{props.pages}</td>\n      <td>{props.read}</td>\n      <td>\n        <button onClick={props.changeReadStatusHandler}>\n          Change Read Status\n        </button>\n      </td>\n      <td>\n        <button className={classes.RemoveBtn} onClick={props.removeBookHandler}>\n          Remove\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default Book;\n","import React from \"react\";\nimport Book from \"./Book/Book\";\n\nconst Books = props => {\n  return props.books.map((book, index) => {\n    return (\n      <Book\n        key={book.id}\n        title={book.title}\n        author={book.author}\n        pages={book.pages}\n        read={book.read}\n        removeBookHandler={() => props.removeBookHandler(book.id)}\n        changeReadStatusHandler={() => props.changeReadStatusHandler(book.id)}\n      />\n    );\n  });\n};\n\nexport default Books;\n","import React from \"react\";\nimport Books from \"./Books/Books\";\nimport classes from \"./Library.module.css\";\n\nconst Library = props => {\n  return (\n    <table className={classes.Library}>\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Author</th>\n          <th>Pages</th>\n          <th className={classes.read}>Read</th>\n          <th className={classes.ChangeReadStatus}>Change Read Status</th>\n          <th className={classes.Remove}>Remove Book</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <Books\n          books={props.books}\n          removeBookHandler={props.removeBookHandler}\n          changeReadStatusHandler={props.changeReadStatusHandler}\n        />\n      </tbody>\n    </table>\n  );\n};\n\nexport default Library;\n","const LocalStorage = (() => {\n  const storageAvailable = type => {\n    let storage;\n    try {\n      storage = window[type];\n      let x = \"__storage_test__\";\n      storage.setItem(x, x);\n      storage.removeItem(x);\n      return true;\n    } catch (e) {\n      return (\n        e instanceof DOMException &&\n        // everything except Firefox\n        (e.code === 22 ||\n          // Firefox\n          e.code === 1014 ||\n          // test name field too, because code might not be present\n          // everything except Firefox\n          e.name === \"QuotaExceededError\" ||\n          // Firefox\n          e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n        // acknowledge QuotaExceededError only if there's something already stored\n        storage &&\n        storage.length !== 0\n      );\n    }\n  };\n\n  return { storageAvailable };\n})();\n\nexport default LocalStorage;\n","import React, { Component } from \"react\";\nimport classes from \"./App.module.css\";\nimport Header from \"./Header/Header\";\nimport Library from \"./Library/Library\";\nimport LocalStorage from \"./LocalStorage/LocalStorage\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    if (\n      LocalStorage.storageAvailable(\"localStorage\") &&\n      localStorage.getItem(\"books\")\n    ) {\n      this.state = {\n        books: JSON.parse(localStorage.getItem(\"books\"))\n      };\n    } else {\n      this.state({\n        books: [\n          {\n            id: 0,\n            title: \"The Hobbit\",\n            author: \"J.R.R. Tolkien\",\n            pages: 295,\n            read: \"Not Read Yet\"\n          },\n          {\n            id: 1,\n            title: \"The 48 Laws of Power\",\n            author: \"Robert Greene\",\n            pages: 480,\n            read: \"Not Read Yet\"\n          },\n          {\n            id: 2,\n            title: \"The Prince\",\n            author: \"Niccolo Machiavelli\",\n            pages: 112,\n            read: \"Not Read Yet\"\n          },\n          {\n            id: 3,\n            title: \"Tides of War\",\n            author: \"Steven Pressfield\",\n            pages: 448,\n            read: \"Not Read Yet\"\n          }\n        ]\n      });\n    }\n  }\n\n  addNewBookHandler = event => {\n    event.preventDefault();\n    const books = [...this.state.books];\n    const nextBookId = books.length !== 0 ? books[books.length - 1].id + 1 : 0;\n\n    books.push({\n      id: nextBookId,\n      title: event.target[0].value,\n      author: event.target[1].value,\n      pages: event.target[2].valueAsNumber,\n      read: event.target[3].value\n    });\n\n    this.setState({ books: books });\n    if (LocalStorage.storageAvailable(\"localStorage\")) {\n      localStorage.setItem(\"books\", JSON.stringify(books));\n    }\n  };\n\n  changeReadStatusHandler = booksId => {\n    const bookIndex = this.state.books.findIndex(b => {\n      return b.id === booksId;\n    });\n\n    const book = Object.assign({}, this.state.books[bookIndex]);\n\n    book.read = book.read === \"Read\" ? \"Not Read Yet\" : \"Read\";\n\n    const books = this.state.books.slice();\n\n    books[bookIndex] = book;\n\n    this.setState({ books: books });\n    if (LocalStorage.storageAvailable(\"localStorage\")) {\n      localStorage.setItem(\"books\", JSON.stringify(books));\n    }\n  };\n\n  removeBookHandler = booksId => {\n    const books = this.state.books.slice();\n    books.splice(booksId, 1);\n    this.setState({ books: books });\n    if (LocalStorage.storageAvailable(\"localStorage\")) {\n      localStorage.setItem(\"books\", JSON.stringify(books));\n    }\n  };\n\n  render() {\n    return (\n      <div className={classes.App}>\n        <Header addNewBook={this.addNewBookHandler.bind(this)} />\n        <Library\n          books={this.state.books}\n          removeBookHandler={this.removeBookHandler.bind(this)}\n          changeReadStatusHandler={this.changeReadStatusHandler.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}